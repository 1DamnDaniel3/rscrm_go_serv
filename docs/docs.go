// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/check": {
            "get": {
                "description": "Приходит кука с токеном, высылается 200, если токен ещё валиден",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Проверка авторизации",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.AuthCheckResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/ownerschool/register": {
            "post": {
                "description": "Создаёт школу, аккаунт владельца и профиль",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Регистрация новой школы",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/useraccounts/login": {
            "post": {
                "description": "Вход стандарт email password, запись в httpOnly Cookies JWT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Логин",
                "parameters": [
                    {
                        "description": "Данные для логина",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.LoginResponse"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "JWT-токен"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.AccountDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "popov@gmail.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "dto.LoginDTO": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.ProfileDTO": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string",
                    "example": "1985-01-01T00:00:00Z"
                },
                "full_name": {
                    "type": "string",
                    "example": "Артём Попов"
                },
                "phone": {
                    "type": "string",
                    "example": "+7-999-123-45-67"
                }
            }
        },
        "dto.RegisterInput": {
            "type": "object",
            "properties": {
                "account": {
                    "$ref": "#/definitions/dto.AccountDTO"
                },
                "profile": {
                    "$ref": "#/definitions/dto.ProfileDTO"
                },
                "school": {
                    "$ref": "#/definitions/dto.SchoolDTO"
                }
            }
        },
        "dto.RegisterOutput": {
            "type": "object",
            "properties": {
                "school_id": {
                    "type": "string",
                    "example": "bbeb26e7-7a3a-4bcf-8a70-338f362eabd1"
                }
            }
        },
        "dto.SchoolDTO": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string",
                    "example": "Тимашевск"
                },
                "email": {
                    "type": "string",
                    "example": "popov@gmail.com"
                },
                "name": {
                    "type": "string",
                    "example": "Right Step"
                },
                "phone": {
                    "type": "string",
                    "example": "+7-999-123-45-67"
                }
            }
        },
        "dto.UserAccountResponseDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "school_id": {
                    "type": "string"
                }
            }
        },
        "user.AuthCheckResponse": {
            "type": "object",
            "properties": {
                "isAuthenticated": {
                    "type": "boolean"
                },
                "user": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "user.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "success"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserAccountResponseDTO"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
